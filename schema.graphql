# The "Query" type is special: it lists all of the available queries that
# clients can execute, along with the return type for each. 
type Query {
    getProducts: [Product!]!
    getProductByID(id: ID!): Product
    getUserCart(userId: ID!): [CartItem!]!
    getUsers: [User!]!
    getUserById(id: ID!): User
}

# User ------------------------------- Schema
type User {
  id: ID!
  email: String!
  name: String
  createdAt: String!
  cart: [CartItem!]!
}

type AuthPayload {
  token: String!
  user: User!
}

# Product ------------------------------- Schema
type Product {
    id: ID!
    name: String!
    images: [String]
    description: String!
    price: Float!
    color: String
    condition:   String!
    createdAt: String!
    category:  Category!
}

# Category ------------------------------- Schema
type Category {
  id: ID!
  name: String!
  products: [Product!]!
}

# CartItem ------------------------------- Schema
type CartItem {
  id: ID!
  product: Product!
  quantity: Int!
  user: User!
  createdAt: String!
}


type Mutation {
    # Product Mutations
    createProduct(
        name: String!
        images: [String]
        description: String!
        price: Float!
        color: String
        condition: String!
        categoryId: ID!
    ): Product
    deleteProduct(id: ID!): Boolean
    updateProduct(
        id: ID!
        name: String
        images: [String]
        description: String
        price: Float
        color: String
        condition: String
        categoryId: ID
    ): Product

    # User Mutations
    createUser(email: String!, password: String!, name: String): User!
    login(email: String!, password: String!): AuthPayload!

    # CartItem Mutations
    addToCart(userId: ID!, productId: ID!, quantity: Int!): CartItem
    removeFromCart(cartItemId: ID!): CartItem
    clearCart(userId: ID!): Boolean
}
